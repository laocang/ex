<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xsi:schemaLocation="   
           http://www.springframework.org/schema/beans   
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
           http://www.springframework.org/schema/context   
           http://www.springframework.org/schema/context/spring-context-3.0.xsd  
           http://www.springframework.org/schema/mvc   
           http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
           http://www.springframework.org/schema/aop 
		   http://www.springframework.org/schema/aop/spring-aop.xsd">
    
    <!-- 启动扫描所有的controller -->
    <context:component-scan base-package="demo"/>
    
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
	   <property name="messageConverters">  
	   <list>  
	   <ref bean="jsonHttpMessageConverter"/>  
	   </list>  
	   </property>  
	</bean>
	
	<bean id="jsonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">    
	    <property name="supportedMediaTypes">    
	        <list>    
	            <value>text/html;charset=UTF-8</value>    
	        </list>    
	    </property>    
	</bean>
    
  <!--   
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
	    <property name="messageConverters">
	        <list>
	            <bean id="utf8StringHttpMessageConverter" 
       				 class="teleware.pda.server.controller.conterver.UTF8StringHttpMessageConverter" />
	        </list>
	    </property>
	</bean> -->
    
    <mvc:annotation-driven/>
    
    
    <!-- 这里拦截器还有一种配置方法【针对路径进行配置】 推荐使用这个，方便直观-->
  <mvc:interceptors>
    	<mvc:interceptor>
    		<mvc:mapping path="/user/MyHome"/>
    		<mvc:mapping path="/usermanager/*"/>
			<bean  class="demo.controller.interceptor.MyInterceptor"></bean>
    	</mvc:interceptor>
    </mvc:interceptors>

    <!-- 配置js，css等静态文件直接映射到对应的文件夹，不被DispatcherServlet处理 -->
    <mvc:resources location="/resources/**" mapping="/resources"/>
    <mvc:resources location="/upload/**" mapping="/upload"/>
    <mvc:resources location="/ueditor/**" mapping="/upload"/>
    
	<!-- 静态资源访问 配置-->
    <mvc:default-servlet-handler/>
    
  
    
    <!-- jsp页面解析器，当Controller返回XXX字符串时，先通过拦截器，然后该类就会在/resources/jsp/目录下，查找XXX.jsp文件-->
 <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->  
        <property name="prefix" value="/WEB-INF/jsp/" />  
        <property name="suffix" value=".jsp" />  
    </bean>  
    
    
     <!-- 支持上传文件 -->  
    <bean id="multipartResolver"  
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver" >
    	    <!-- 指定所上传文件的总大小不能超过5000KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 --> 
        <property name="maxUploadSize" value="52428800000"/>
        <property name="maxInMemorySize">  
           <value>2048</value>  
        </property> 
    </bean>  
    
    
    <!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException --> 
    <!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 --> 
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"> 
        <property name="exceptionMappings"> 
            <props> 
                <!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/jsp/error_fileupload.jsp页面 --> 
                <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">error</prop> 
            </props> 
        </property> 
    </bean>
    
    <!-- cglib使用cglib代理自动生成代理对象，使用jdk的proxy只能对接口 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
</beans>